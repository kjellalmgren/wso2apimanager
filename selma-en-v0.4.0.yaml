openapi: 3.0.1
info:
  title: Selma SME Light
  description: This definition is the API between customer SME-Gui and the persistence framework based on Activiti
  termsOfService: terms
  contact:
    name: API v1 for SME initiative
    url: developer.landshypotek.se/v1/sme
    email: developer@landshypotek.se
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  version: 0.4.0
servers:
- url: http://localhost:8000/
- url: https://localhost:8000/
tags:
- name: Selma SME(EN) API Definitions
  description: Access layer to the process engine(Activiti)
paths:
  /v1/Customer/{processId}/{customerId}:
    get:
      tags:
      - getCustomer
      summary: Get a specific customer by processId, customerId
      description: Get a specific customer from the process layer
      operationId: getCustomer
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      - name: customerId
        in: path
        description: customerId is swedish ssn or corporate organisation number
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/customerId'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        403:
          description: Forbidden
        404:
          description: Invalid page
  /v1/Customers/{processId}:
    get:
      tags:
      - getCustomers
      summary: get a list of available customers
      description: Get a list of available customers by ProcessId....
      operationId: getCustomers
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customers'
        403:
          description: Forbidden
        404:
          description: Invalid page
        500:
          description: Page Not found
  /v1/updateCustomer/{processId}/{customerId}:
    post:
      tags:
      - updateCustomer
      summary: update a specific customer in Activiti
      description: descripition
      operationId: updateCustomer
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      - name: customerId
        in: path
        description: customerId is swedish ssn or corporate organisation number
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/customerId'
      requestBody:
        $ref: '#/components/requestBodies/updateCustomer'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        403:
          description: Forbidden
        404:
          description: Invalid page
        500:
          description: Page Not found
  /v1/deleteCustomer/{processId}/{customerId}:
    post:
      tags:
      - deleteCustomer
      summary: Delete a specific customer in Activiti
      description: descripition
      operationId: deleteCustomer
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      - name: customerId
        in: path
        description: customerId is swedish ssn or corporate organisation number
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/customerId'
      responses:
        200:
          description: Successful
        403:
          description: Forbidden
        404:
          description: Invalid page
        500:
          description: Page Not found
  /v1/Company/{processId}/{companyId}:
    get:
      tags:
      - getCompany
      summary: Get a specific company by ProcessId, companyId
      description: Get a specific company from the process layer
      operationId: getCompany
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      - name: companyId
        in: path
        description: companyId is swedish ssn or corporate organisation number
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/companyId'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        403:
          description: Forbidden
        404:
          description: Invalid page
  /v1/Companies/{processId}:
    get:
      tags:
      - getCompanies
      summary: get a list of available companies
      description: Get a list of available companies by ProcessId....
      operationId: getCompanies
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Companies'
        403:
          description: Forbidden
        404:
          description: Invalid page
        500:
          description: Page Not found
  /v1/updateCompany/{processId}/{companyId}:
    post:
      tags:
      - updateCompany
      summary: update a specific company in Activiti
      description: descripition
      operationId: updateCompany
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      - name: companyId
        in: path
        description: companyId is swedish ssn or corporate organisation number
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/companyId'
      requestBody:
        $ref: '#/components/requestBodies/updateCompany'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        403:
          description: Forbidden
        404:
          description: Invalid page
        500:
          description: Page Not found
  /v1/deleteCompany/{processId}/{companyId}:
    post:
      tags:
      - deleteCompany
      summary: Delete a specific company in Activiti
      description: descripition
      operationId: deleteCompany
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      - name: companyId
        in: path
        description: companyId is swedish ssn or corporate organisation number
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/companyId'
      responses:
        200:
          description: Successful
        403:
          description: Forbidden
        404:
          description: Invalid page
        500:
          description: Page Not found
  /v1/Household/{processId}/{customerId}/{householdId}:
    get:
      tags:
      - getHousehold
      summary: Get a specific household by processId, customerId
      description: Get a specific household from the process layer
      operationId: getHousehold
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      - name: customerId
        in: path
        description: customerId is swedish ssn or corporate organisation number
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/customerId'
      - name: householdId
        in: path
        description: TBD
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/householdId'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Household'
        403:
          description: Forbidden
        404:
          description: Invalid page
  /v1/Households/{processId}/{customerId}:
    get:
      tags:
      - getHouseholds
      summary: get a list of available households
      description: Get a list of available households by ProcessId....
      operationId: getHouseholds
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      - name: customerId
        in: path
        description: customerId is swedish ssn or corporate organisation number
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/customerId'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Households'
        403:
          description: Forbidden
        404:
          description: Invalid page
        500:
          description: Page Not found
  /v1/updateHousehold/{processId}/{customerId}/{householdId}:
    post:
      tags:
      - updateHousehold
      summary: update a specific household in Activiti
      description: descripition
      operationId: updateHousehold
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      - name: customerId
        in: path
        description: customerId is swedish ssn or corporate organisation number
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/customerId'
      - name: householdId
        in: path
        description: TBD
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/householdId'
      requestBody:
        $ref: '#/components/requestBodies/updateHousehold'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Household'
        403:
          description: Forbidden
        404:
          description: Invalid page
        500:
          description: Page Not found
  /v1/deleteHousehold/{processId}/{customerId}/{householdId}:
    post:
      tags:
      - deleteHousehold
      summary: Delete a specific household in Activiti
      description: descripition
      operationId: deleteHousehold
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      - name: customerId
        in: path
        description: customerId is swedish ssn or corporate organisation number
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/customerId'
      - name: householdId
        in: path
        description: TBD
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/householdId'
      responses:
        200:
          description: Successful
        403:
          description: Forbidden
        404:
          description: Invalid page
        500:
          description: Page Not found
  /v1/Colleteral/{processId}/{customerId}/{colleteralId}:
    get:
      tags:
      - getColleteral
      summary: Get a specific colleteral by processId, customerId and colleteralId
      description: Get a specific colleteral from the process layer
      operationId: getColleteral
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      - name: customerId
        in: path
        description: customerId is swedish ssn or corporate organisation number
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/customerId'
      - name: colleteralId
        in: path
        description: TBD
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/colleteralId'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Colleteral'
        403:
          description: Forbidden
        404:
          description: Invalid page
  /v1/Colleterals/{processId}/{customerId}:
    get:
      tags:
      - getColleterals
      summary: get a list of available colleterals
      description: Get a list of available colleterals by ProcessId and customerId...
      operationId: getColleterals
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      - name: customerId
        in: path
        description: customerId is swedish ssn or corporate organisation number
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/customerId'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Colleterals'
        403:
          description: Forbidden
        404:
          description: Invalid page
        500:
          description: Page Not found
  /v1/updateColleteral/{processId}/{customerId}/{colleteralId}:
    post:
      tags:
      - updateColleteral
      summary: update a specific colleteral in Activiti
      description: descripition
      operationId: updateColleteral
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      - name: customerId
        in: path
        description: customerId is swedish ssn or corporate organisation number
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/customerId'
      - name: colleteralId
        in: path
        description: TBD
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/colleteralId'
      requestBody:
        $ref: '#/components/requestBodies/updateColleteral'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Colleteral'
        403:
          description: Forbidden
        404:
          description: Invalid page
        500:
          description: Page Not found
  /v1/deleteColleteral/{processId}/{customerId}/{colleteralId}:
    post:
      tags:
      - deleteColleteral
      summary: Delete a specific colleteral in Activiti
      description: descripition
      operationId: deleteColleteral
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      - name: customerId
        in: path
        description: customerId is swedish ssn or corporate organisation number
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/customerId'
      - name: colleteralId
        in: path
        description: TBD
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/colleteralId'
      responses:
        200:
          description: Successful
        403:
          description: Forbidden
        404:
          description: Invalid page
        500:
          description: Page Not found
  /v1/Loan/{processId}/{loanId}:
    get:
      tags:
      - getLoan
      summary: Get a specific loan by processId
      description: Get a specific loan from the process layer
      operationId: getLoan
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      - name: loanId
        in: path
        description: TBD
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/loanId'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
        403:
          description: Forbidden
        404:
          description: Invalid page
  /v1/Loans/{processId}:
    get:
      tags:
      - getLoans
      summary: get a list of available loans
      description: Get a list of available loans by ProcessId...
      operationId: getLoans
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loans'
        403:
          description: Forbidden
        404:
          description: Invalid page
        500:
          description: Page Not found
  /v1/updateLoan/{processId}/{loanId}:
    post:
      tags:
      - updateLoan
      summary: update a specific loan in Activiti
      description: TBD
      operationId: updateLoan
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      - name: loanId
        in: path
        description: TBD
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/loanId'
      requestBody:
        $ref: '#/components/requestBodies/updateLoan'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
        403:
          description: Forbidden
        404:
          description: Invalid page
        500:
          description: Page Not found
  /v1/deleteLoan/{processId}/{loanId}:
    post:
      tags:
      - deleteLoan
      summary: Delete a specific loan in Activiti
      description: TBD
      operationId: deleteLoan
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      - name: loanId
        in: path
        description: TBD
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/loanId'
      responses:
        200:
          description: Successful
        403:
          description: Forbidden
        404:
          description: Invalid page
        500:
          description: Page Not found
  /v1/ExtLoan/{processId}/{customerId}/{extloanId}:
    get:
      tags:
      - getExtLoan
      summary: Get a specific extloan by processId, customerId
      description: Get a specific extloan from the process layer
      operationId: getExtLoan
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      - name: customerId
        in: path
        description: customerId is swedish ssn or corporate organisation number
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/customerId'
      - name: extloanId
        in: path
        description: TBD
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/extloanId'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtLoan'
        403:
          description: Forbidden
        404:
          description: Invalid page
  /v1/ExtLoans/{processId}/{customerId}:
    get:
      tags:
      - getExtLoans
      summary: get a list of available extloans
      description: Get a list of available extloans by ProcessId and customerId....
      operationId: getExtLoans
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      - name: customerId
        in: path
        description: customerId is swedish ssn or corporate organisation number
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/customerId'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtLoans'
        403:
          description: Forbidden
        404:
          description: Invalid page
        500:
          description: Page Not found
  /v1/updateExtLoan/{processId}/{customerId}/{extloanId}:
    post:
      tags:
      - updateExtLoan
      summary: update a specific extloan in Activiti
      description: descripition
      operationId: updateExtLoan
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      - name: customerId
        in: path
        description: customerId is swedish ssn or corporate organisation number
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/customerId'
      - name: extloanId
        in: path
        description: TBD
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/extloanId'
      requestBody:
        $ref: '#/components/requestBodies/updateExtLoan'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtLoan'
        403:
          description: Forbidden
        404:
          description: Invalid page
        500:
          description: Page Not found
  /v1/deleteExtLoan/{processId}/{customerId}/{extloanId}:
    post:
      tags:
      - deleteExtLoan
      summary: Delete a specific extloan in Activiti
      description: descripition
      operationId: deleteExtLoan
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      - name: customerId
        in: path
        description: customerId is swedish ssn or corporate organisation number
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/customerId'
      - name: extloanId
        in: path
        description: TBD
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/extloanId'
      responses:
        200:
          description: Successful
        403:
          description: Forbidden
        404:
          description: Invalid page
        500:
          description: Page Not found
  /v1/PersonalEconomy/{processId}/{customerId}/{personalEconomyId}:
    get:
      tags:
      - getPersonalEconomy
      summary: Get a specific PersonalEconomy by processId, customerId
      description: Get a specific PersonalEconomy from the process layer
      operationId: getPersonalEconomy
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      - name: customerId
        in: path
        description: customerId is swedish ssn or corporate organisation number
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/customerId'
      - name: personalEconomyId
        in: path
        description: TBD
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/personalEconomyId'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalEconomy'
        403:
          description: Forbidden
        404:
          description: Invalid page
  /v1/PersonalEconomies/{processId}/{customerId}:
    get:
      tags:
      - getPersonalEconomies
      summary: get a list of available PersonalEconomies
      description: Get a list of available PersonalEconomies by ProcessId and customerId....
      operationId: getPersonalEconomies
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      - name: customerId
        in: path
        description: customerId is swedish ssn or corporate organisation number
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/customerId'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalEconomies'
        403:
          description: Forbidden
        404:
          description: Invalid page
        500:
          description: Page Not found
  /v1/updatePersonalEconomy/{processId}/{customerId}/{personalEconomyId}:
    post:
      tags:
      - updatePersonalEconomy
      summary: update a specific PersonalEconomy in Activiti
      description: TBD
      operationId: updatePersonalEconomy
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      - name: customerId
        in: path
        description: customerId is swedish ssn or corporate organisation number
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/customerId'
      - name: personalEconomyId
        in: path
        description: TBD
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/personalEconomyId'
      requestBody:
        $ref: '#/components/requestBodies/updatePersonalEconomy'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalEconomy'
        403:
          description: Forbidden
        404:
          description: Invalid page
        500:
          description: Page Not found
  /v1/deletePersonalEconomy/{processId}/{customerId}/{personalEconomyId}:
    post:
      tags:
      - deletePersonalEconomy
      summary: Delete a specific PersonalEconomy in Activiti
      description: TBD
      operationId: deletePersonalEconomy
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      - name: customerId
        in: path
        description: customerId is swedish ssn or corporate organisation number
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/customerId'
      - name: personalEconomyId
        in: path
        description: TBD
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/personalEconomyId'
      responses:
        200:
          description: Successful
        403:
          description: Forbidden
        404:
          description: Invalid page
        500:
          description: Page Not found
  /v1/CompanyEconomy/{processId}/{companyEconomyId}:
    get:
      tags:
      - getCompanyEconomy
      summary: Get a specific CompanyEconomy by processId
      description: Get a specific CompanyEconomy from the process layer
      operationId: getCompanyEconomy
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      - name: companyEconomyId
        in: path
        description: TBD
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/companyEconomyId'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyEconomy'
        403:
          description: Forbidden
        404:
          description: Invalid page
  /v1/CompanyEconomies/{processId}:
    get:
      tags:
      - getCompanyEconomies
      summary: get a list of available CompanyEconomies
      description: Get a list of available CompanyEconomies by ProcessId
      operationId: getCompanyEconomies
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyEconomies'
        403:
          description: Forbidden
        404:
          description: Invalid page
        500:
          description: Page Not found
  /v1/updateCompanyEconomy/{processId}/{companyEconomyId}:
    post:
      tags:
      - updateCompanyEconomy
      summary: update a specific CompanyEconomy in Activiti
      description: TBD
      operationId: updateCompanyEconomy
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      - name: companyEconomyId
        in: path
        description: TBD
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/companyEconomyId'
      requestBody:
        $ref: '#/components/requestBodies/updateCompanyEconomy'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyEconomy'
        403:
          description: Forbidden
        404:
          description: Invalid page
        500:
          description: Page Not found
  /v1/deleteCompanyEconomy/{processId}/{companyEconomyId}:
    post:
      tags:
      - deleteCompanyEconomy
      summary: Delete a specific CompanyEconomy in Activiti
      description: TBD
      operationId: deleteCompanyEconomy
      parameters:
      - name: processId
        in: path
        description: unique identity in Activiti framework
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/processId'
      - name: companyEconomyId
        in: path
        description: TBD
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/companyEconomyId'
      responses:
        200:
          description: Successful
        403:
          description: Forbidden
        404:
          description: Invalid page
        500:
          description: Page Not found
components:
  schemas:
    processId:
      type: string
      description: Activiti framework unique identification
      example: 9a65d28a-46bb-4442-b96d-6a09fda6b18b
    customerId:
      type: string
      description: customerId is swedish ssn or corporate organisation number
      example: "197001010101"
    customerName:
      type: string
      description: Full name of the customer/applicant
      example: Anna Andersson
    customerAddress:
      type: string
      description: TBD
      example: Trossvägen 1
    customerPostAddress:
      type: string
      description: TBD
      example: 181 66 Lidingö
    customerRole:
      type: string
      description: Huvudlåntagare or Medlåntagare i SAP
      example: Huvudlåntagare/medlåntagare in SAP
    customerEmail:
      type: string
      description: customer enter email for notification
      example: kjell.almgren@landshypotek.se
    customerMobileNumber:
      type: string
      description: customer entered mobile number for notification
      example: "0733981482"
    companyId:
      type: string
      description: generated guid in the model
      example: 02d6a03e-5895-4077-98f7-7a5c192868b7
    orgNumber:
      type: string
      description: -> Organisation number from external service, swedish ssn (ruoring.io)
      example: 550101-1010
    companyName:
      type: string
      description: Full name of the company from external services
      example: Anna Andersson Mjölkproduktion
    companyCreated:
      type: string
      description: -> date when company was established, from external service
      example: 2012-01-01
    householdId:
      type: string
      description: TBD
      example: 02d6a03e-5895-4077-98f7-7a5c192878b8
    householdName:
      type: string
      description: TBD
      example: Stora hushållet
    civilState:
      type: string
      description: -> TBD
      example: Gift
    numberOfChildsAtHome:
      type: string
      description: Number of child in this household
      example: "2"
    numberOfCars:
      type: string
      description: number of cars in this houshold
      example: "2"
    childCareCosts:
      type: string
      description: TBD
      example: 1 500 SEK
    childMaintenanceCost:
      type: string
      description: -> TBD
      example: 0 SEK
    loanId:
      type: string
      description: TBD
      example: 08f55e2f-e947-48f4-89d2-d31af2fc28d6
    loanNumber:
      type: string
      description: This will only be a temporary loanNumber, when can we reserv a loan number in SAP
      example: "9397000010"
    loanAmount:
      type: string
      description: Customer want to loan this amount
      example: 2 500 000 SEK
    numberOfLoans:
      type: string
      description: Customer want to split this loan in number of load
      example: "2"
    colleteralId:
      type: string
      description: TBD
      example: 82faaa1a-42f7-4d87-aecf-96c450a0ce59
    colleteralName:
      type: string
      description: TBD
      example: SKOGEN 4:3
    colleteralMunicipality:
      type: string
      description: Kommun där fastigheten och/eller säkerheten finns
      example: Katrineholm
    colleteralStreet:
      type: string
      description: TBD
      example: Bergsgatan 12
    extloanId:
      type: string
      description: TBD
      example: 3164d347-e173-4c4f-8839-26d32716e5bf
    extCreditInstitut:
      type: string
      description: TBD
      example: SEB
    extloanNumber:
      type: string
      description: TBD
      example: "0028600"
    extloanClearing:
      type: string
      description: TBD
      example: "5270"
    personalEconomyId:
      type: string
      description: TBD
      example: b0c0edaa-3d75-4364-9179-1ecc8d9198d0
    yearlyIncome:
      type: string
      description: TBD
      example: 340 000 SEK
    income:
      type: string
      description: TBD
      example: 40 000 SEK
    typeOfEmployeement:
      type: string
      description: TBD
      example: Tillsvidare
    employeer:
      type: string
      description: -> TBD
      example: Skatteverket
    mainPurposes:
      type: string
      description: Ändamål och syfte (TBD)
      example: KOP
      enum:
      - KOP
      - OVR
      - ULN
      - NOB
    purposes:
      type: string
      description: Ändamål och syfte ska sättas på respektive lån som går över till LP. I de fall där det inte specifiseras ska handläggar gör det innan överföring till SAP. Detta för att de ska bli rätt i statistiken ned i SAS.
      enum:
      - FKP
      - FAF
      - FKJ
      - FBB
      - FBI
      - RTM
    purposeDisplayText:
      type: string
      description: TBD
      enum:
      - Fastighetsköp - privatbostad
      - Fastighetsköp - annan fastighet
      - Fastighetsköp - jordbruk
      - Finansiering befintlig bostad
      - Finansiering befintlig bostad (omläggning internt)
      - Ny/tillbyggnad/renovering mjölkstall
    companyEconomyId:
      type: string
      description: TBD
      example: 32084646-d030-4c51-a316-b1342c3551ab
    customerType:
      required:
      - customerId
      - processId
      type: object
      properties:
        processId:
          $ref: '#/components/schemas/processId'
        customerId:
          $ref: '#/components/schemas/customerId'
        customerName:
          $ref: '#/components/schemas/customerName'
        customerAddress:
          $ref: '#/components/schemas/customerAddress'
        customerPostAddress:
          $ref: '#/components/schemas/customerPostAddress'
        role:
          $ref: '#/components/schemas/customerRole'
        eMail:
          $ref: '#/components/schemas/customerEmail'
        mobileNumber:
          $ref: '#/components/schemas/customerMobileNumber'
      description: Type of customer instance
    Customer:
      $ref: '#/components/schemas/customerType'
    Customers:
      type: array
      description: List of customerType
      items:
        $ref: '#/components/schemas/customerType'
    companyType:
      required:
      - companyId
      - processId
      type: object
      properties:
        processId:
          $ref: '#/components/schemas/processId'
        companyId:
          $ref: '#/components/schemas/companyId'
        orgNumber:
          $ref: '#/components/schemas/orgNumber'
        companyName:
          $ref: '#/components/schemas/companyName'
        created:
          $ref: '#/components/schemas/companyCreated'
      description: Type of company instance
    Company:
      $ref: '#/components/schemas/companyType'
    Companies:
      type: array
      description: TBD
      items:
        $ref: '#/components/schemas/companyType'
    householdType:
      required:
      - customerId
      - householdId
      - processId
      type: object
      properties:
        processId:
          $ref: '#/components/schemas/processId'
        customerId:
          $ref: '#/components/schemas/customerId'
        householdId:
          $ref: '#/components/schemas/householdId'
        householdName:
          $ref: '#/components/schemas/householdName'
        civilState:
          $ref: '#/components/schemas/civilState'
        numberOfChildsAtHome:
          $ref: '#/components/schemas/numberOfChildsAtHome'
        numberOfCars:
          $ref: '#/components/schemas/numberOfCars'
        childCareCosts:
          $ref: '#/components/schemas/childCareCosts'
        childMaintenaceCost:
          $ref: '#/components/schemas/childMaintenanceCost'
      description: TBD
    Household:
      $ref: '#/components/schemas/householdType'
    Households:
      type: array
      description: return all available households for a customer
      items:
        $ref: '#/components/schemas/householdType'
    loanType:
      required:
      - customerId
      - loanId
      - processId
      type: object
      properties:
        processId:
          $ref: '#/components/schemas/processId'
        customerId:
          $ref: '#/components/schemas/customerId'
        loanId:
          $ref: '#/components/schemas/loanId'
        loanNumber:
          $ref: '#/components/schemas/loanNumber'
        loanAmount:
          $ref: '#/components/schemas/loanAmount'
        numberOfLoans:
          $ref: '#/components/schemas/numberOfLoans'
        purposeOfLoan:
          $ref: '#/components/schemas/purposes'
      description: This represent the customer loan structure
    Loan:
      $ref: '#/components/schemas/loanType'
    Loans:
      type: array
      description: TBD
      items:
        $ref: '#/components/schemas/loanType'
    extloanType:
      required:
      - customerId
      - extloanId
      - processId
      type: object
      properties:
        processId:
          $ref: '#/components/schemas/processId'
        customerId:
          $ref: '#/components/schemas/customerId'
        extloanId:
          $ref: '#/components/schemas/extloanId'
        extCreditInstitut:
          $ref: '#/components/schemas/extCreditInstitut'
        extloanClearing:
          $ref: '#/components/schemas/extloanClearing'
        extloanNumber:
          $ref: '#/components/schemas/extloanNumber'
      description: Externa lån kunden har i andra kreditinstitut, detta exkluderar LH-lån
    ExtLoan:
      $ref: '#/components/schemas/extloanType'
    ExtLoans:
      type: array
      description: TBD
      items:
        $ref: '#/components/schemas/extloanType'
    colleteralType:
      required:
      - colleteralId
      - customerId
      - processId
      type: object
      properties:
        processId:
          $ref: '#/components/schemas/processId'
        customerId:
          $ref: '#/components/schemas/customerId'
        colleteralId:
          $ref: '#/components/schemas/colleteralId'
        colleteralName:
          $ref: '#/components/schemas/colleteralName'
        colleteralMunicipality:
          $ref: '#/components/schemas/colleteralMunicipality'
        colleteralStreet:
          $ref: '#/components/schemas/colleteralStreet'
      description: Säkerheter för lånet, om köp, även andra fastigheter kan användas som säkerhet för lånet
    Colleteral:
      $ref: '#/components/schemas/colleteralType'
    Colleterals:
      type: array
      description: TBD
      items:
        $ref: '#/components/schemas/colleteralType'
    personalEconomyType:
      required:
      - customerId
      - personalEconomyId
      - processId
      type: object
      properties:
        processId:
          $ref: '#/components/schemas/processId'
        customerId:
          $ref: '#/components/schemas/customerId'
        personalEconomyId:
          $ref: '#/components/schemas/personalEconomyId'
        YearlyIncome:
          $ref: '#/components/schemas/yearlyIncome'
        Income:
          $ref: '#/components/schemas/income'
        TypeOfEmployeement:
          $ref: '#/components/schemas/typeOfEmployeement'
        Employeer:
          $ref: '#/components/schemas/employeer'
      description: TBD
    PersonalEconomy:
      $ref: '#/components/schemas/personalEconomyType'
    PersonalEconomies:
      type: array
      description: -> TBD
      items:
        $ref: '#/components/schemas/personalEconomyType'
    companyEconomyType:
      required:
      - companyEconomyId
      - processId
      type: object
      properties:
        processId:
          $ref: '#/components/schemas/processId'
        companyEconomyId:
          $ref: '#/components/schemas/companyEconomyId'
      description: TBD
    CompanyEconomy:
      $ref: '#/components/schemas/companyEconomyType'
    CompanyEconomies:
      type: array
      description: -> TBD
      items:
        $ref: '#/components/schemas/companyEconomyType'
  parameters:
    processId:
      name: processId
      in: path
      description: unique identity in Activiti framework
      required: true
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/processId'
    customerId:
      name: customerId
      in: path
      description: customerId is swedish ssn or corporate organisation number
      required: true
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/customerId'
    companyId:
      name: companyId
      in: path
      description: companyId is swedish ssn or corporate organisation number
      required: true
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/companyId'
    householdId:
      name: householdId
      in: path
      description: TBD
      required: true
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/householdId'
    loanId:
      name: loanId
      in: path
      description: TBD
      required: true
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/loanId'
    colleteralId:
      name: colleteralId
      in: path
      description: TBD
      required: true
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/colleteralId'
    extloanId:
      name: extloanId
      in: path
      description: TBD
      required: true
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/extloanId'
    personalEconomyId:
      name: personalEconomyId
      in: path
      description: TBD
      required: true
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/personalEconomyId'
    companyEconomyId:
      name: companyEconomyId
      in: path
      description: TBD
      required: true
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/companyEconomyId'
  requestBodies:
    updateCustomer:
      description: Update a specific customer in the Activiti framework
      content:
        application/json:
          schema:
            oneOf:
            - $ref: '#/components/schemas/customerType'
      required: true
    updateCompany:
      description: Update a specific company in the Activiti framework
      content:
        application/json:
          schema:
            oneOf:
            - $ref: '#/components/schemas/companyType'
      required: true
    updateHousehold:
      description: Update a specific household in the Activiti framework
      content:
        application/json:
          schema:
            oneOf:
            - $ref: '#/components/schemas/householdType'
      required: true
    updateLoan:
      description: TBD
      content:
        application/json:
          schema:
            oneOf:
            - $ref: '#/components/schemas/loanType'
      required: true
    updateColleteral:
      description: TBD
      content:
        application/json:
          schema:
            oneOf:
            - $ref: '#/components/schemas/colleteralType'
      required: true
    updateExtLoan:
      description: TBD
      content:
        application/json:
          schema:
            oneOf:
            - $ref: '#/components/schemas/extloanType'
      required: true
    updatePersonalEconomy:
      description: TBD
      content:
        application/json:
          schema:
            oneOf:
            - $ref: '#/components/schemas/personalEconomyType'
      required: true
    updateCompanyEconomy:
      description: TBD
      content:
        application/json:
          schema:
            oneOf:
            - $ref: '#/components/schemas/companyEconomyType'
      required: true
